{"version":3,"file":"static/js/697.f5e34bb8.chunk.js","mappings":"6PACA,EAA2B,2BAA3B,EAAiE,2BAAjE,EAAsG,0BAAtG,EAA2I,2BAA3I,EAAsL,gCAAtL,EAAuO,iC,SCoCvO,EAhCiB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAClB,OACE,eAAIC,UAAWC,EAAf,SACGF,EAAQG,KAAI,SAAAC,GACX,IAAQC,EAAkDD,EAAlDC,UAAWC,EAAuCF,EAAvCE,GAAIC,EAAmCH,EAAnCG,KAAMC,EAA6BJ,EAA7BI,WAAYC,EAAiBL,EAAjBK,aACnCC,EAAYD,EAAY,yCAAqCA,G,yxVAEnE,OACE,gBAAaR,UAAWC,EAAxB,WACE,gBAAKD,UAAWC,EAAaS,IAAKD,EAAWE,IAAKL,EAAMM,MAAM,SAC9D,eAAIZ,UAAWC,EAAf,SAA8BK,KAC9B,cAAGN,UAAWC,EAAd,SAAkCG,KAClC,eAAGJ,UAAWC,EAAd,UAAkC,eAAaY,OAAOC,WAAWP,GAAYQ,QAAQ,GAAG,eAJjFV,EAOZ,KAGN,ECtBD,EAAgC,4BAAhC,EAAwE,wBAAxE,EAA8G,0BCmC9G,EA9Ba,WACX,OAA8BW,EAAAA,EAAAA,UAAS,IAAvC,eAAOjB,EAAP,KAAgBkB,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAEDC,EAAAA,EAAAA,IAAgBJ,GAFf,OAElBK,EAFkB,OAGxBN,EAAWM,GAHa,gDAMxBC,QAAQC,MAAM,KAAMC,SANI,yDAAH,qDAUzBL,GACD,GAAE,CAACH,KAGF,iBAAKlB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA8B,SAC7BF,EAAQ4B,OAAS,GAChB,SAAC,EAAD,CAAU5B,QAASA,KAEnB,cAAGC,UAAWC,EAAd,SAA+B,0EAItC,C,mMChCK2B,EAAW,+BACXC,EAAU,mCAGHC,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IAF9C,cAEvBN,EAFuB,yBAGtBA,EAASS,MAHa,sCAKvB,IAAIC,MAAM,KAAMP,SALO,yDAAH,qDAUjBQ,EAAY,mCAAG,WAAOC,GAAP,gGAEDJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,kBAA+DM,EAA/D,YAFC,cAElBZ,EAFkB,yBAGjBA,EAASS,MAHQ,sCAKlB,IAAIC,MAAM,KAAMP,SALE,yDAAH,sDAUZU,EAAe,mCAAG,WAAOlB,GAAP,gGAEJa,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BV,EAA/B,oBAAkDW,IAF9C,cAErBN,EAFqB,yBAGpBA,EAASS,MAHW,sCAKrB,IAAIC,MAAM,KAAMP,SALK,yDAAH,sDAUfJ,EAAe,mCAAG,WAAOJ,GAAP,gGAEJa,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BV,EAA/B,4BAA0DW,IAFtD,cAErBN,EAFqB,yBAGpBA,EAASS,KAAKK,MAHM,sCAKrB,IAAIJ,MAAM,KAAMP,SALK,yDAAH,sDAUfY,EAAe,mCAAG,WAAOpB,GAAP,gGAEJa,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BV,EAA/B,4BAA0DW,IAFtD,cAErBN,EAFqB,yBAGpBA,EAASS,KAAKO,SAHM,sCAKrB,IAAIN,MAAM,KAAMP,SALK,yDAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/CastItem/CastItem.module.css?d4dc","components/CastItem/CastItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastItem_castList__KO9A0\",\"castItem\":\"CastItem_castItem__fW-Sh\",\"castImg\":\"CastItem_castImg__6fxLg\",\"castName\":\"CastItem_castName__VXgo9\",\"castCharacter\":\"CastItem_castCharacter__nD77Q\",\"castPopularity\":\"CastItem_castPopularity__0RORB\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport defaultCastImage from '../../images/default_cast.png';\nimport css from './CastItem.module.css';\n\nconst CastItem = ({ credits }) => {\n  return (\n    <ul className={css.castList}>\n      {credits.map(credit => {\n        const { character, id, name, popularity, profile_path } = credit;\n        const castImage = profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : defaultCastImage;\n\n        return (\n          <li key={id} className={css.castItem}>\n            <img className={css.castImg} src={castImage} alt={name} width=\"200\" />\n            <h4 className={css.castName}>{name}</h4>\n            <p className={css.castCharacter}>{character}</p>\n            <p className={css.castPopularity}>Popularity: {Number.parseFloat(popularity).toFixed(1)} ☆</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCastItem.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      character: PropTypes.string,\n      id: PropTypes.number,\n      name: PropTypes.string,\n      popularity: PropTypes.number,\n      profile_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default CastItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castTitle\":\"Cast_castTitle__eoJbw\",\"castAltText\":\"Cast_castAltText__AeFaW\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'services/themoviedb-api';\nimport CastItem from 'components/CastItem/CastItem';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieCreditsData = async () => {\n      try {\n        const response = await getMovieCredits(movieId);\n        setCredits(response);\n        // console.log(response);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getMovieCreditsData();\n  }, [movieId]);\n\n  return (\n    <div className={css.castContainer}>\n      <h3 className={css.castTitle}>Cast</h3>\n      {credits.length > 0 ? (\n        <CastItem credits={credits} />\n      ) : (\n        <p className={css.castAltText}>Regrettably, there is no information about the cast for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab7c8e3be151e2a634eb03e6c55db2da';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport const searchMovies = async (query) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму.\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};"],"names":["credits","className","css","map","credit","character","id","name","popularity","profile_path","castImage","src","alt","width","Number","parseFloat","toFixed","useState","setCredits","movieId","useParams","useEffect","getMovieCreditsData","getMovieCredits","response","console","error","message","length","BASE_URL","API_KEY","getTrendingMovies","axios","data","Error","searchMovies","query","getMovieDetails","cast","getMovieReviews","results"],"sourceRoot":""}