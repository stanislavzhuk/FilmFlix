{"version":3,"file":"static/js/596.b6fe9638.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/ReviewsItem/ReviewsItem.module.css?9eab","components/ReviewsItem/ReviewsItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/themoviedb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"ReviewsItem_reviewsList__YW6yF\",\"reviewsItem\":\"ReviewsItem_reviewsItem__FbWDV\",\"reviewsContLink\":\"ReviewsItem_reviewsContLink__HhIUs\",\"reviewsName\":\"ReviewsItem_reviewsName__u+zuh\"};","import React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport defaultReviewAuthorImage from '../../images/default_review_author.png';\nimport css from './ReviewsItem.module.css';\n\nconst ReviewsItem = ({ reviews }) => {\n  const ratingConvert = rating => {\n    return Array.from({ length: rating }, () => '✯').join('');\n  };\n  \n  const formatDateTime = dateTime => {\n    const formattedDateTime = moment(dateTime).format('DD MMM YYYY HH:mm:ss');\n    return formattedDateTime;\n  };\n\n  return (\n    <ul className={css.reviewsList}>\n      {reviews.map(review => {\n        const { author_details, content, created_at, id, url } = review;\n        const { avatar_path, username, rating } = author_details;\n        const reviewImage = !avatar_path || avatar_path.includes('secure.gravatar') ? defaultReviewAuthorImage : `https://image.tmdb.org/t/p/w500/${avatar_path}`;\n\n        return (\n          <li key={id} className={css.reviewsItem}>\n            <a className={css.reviewsContLink} rel=\"noopener noreferrer\" target=\"_blank\" href={url}>\n              <h4 className={css.reviewsName}>{username}</h4>\n              <p>{rating !== null && `Rating: ${ratingConvert(rating)}`}</p>\n              <img src={reviewImage} alt=\"Review Author\" width=\"100\" />\n              <p>{content}</p>\n              <p>Created: {formatDateTime(created_at)}</p>\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  );\n};\n\nReviewsItem.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author_details: PropTypes.shape({\n        avatar_path: PropTypes.string,\n        username: PropTypes.string,\n        rating: PropTypes.number,\n      }),\n      content: PropTypes.string,\n      created_at: PropTypes.string,\n      id: PropTypes.string,\n      url: PropTypes.string,\n    })\n  ),\n};\n\nexport default ReviewsItem;","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewsTitle\":\"Reviews_reviewsTitle__mxqAS\",\"reviewsAltText\":\"Reviews_reviewsAltText__pjX+6\"};","import ReviewsItem from 'components/ReviewsItem/ReviewsItem';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/themoviedb-api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviewsData = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response);\n        // console.log(response);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getMovieReviewsData();\n  }, [movieId]);\n\n\n  return (\n    <div className={css.reviewsContainer}>\n      <h3 className={css.reviewsTitle}>Reviews</h3>\n      {reviews.length > 0 ? (\n        <ReviewsItem reviews={reviews} />\n      ) : (\n        <p className={css.reviewsAltText}>We don't have any reviews for this movie yet.</p>\n      )}\n    </div>\n  )};\n\nexport default Reviews;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab7c8e3be151e2a634eb03e6c55db2da';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport const searchMovies = async (query) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму.\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};"],"names":["reviews","ratingConvert","rating","Array","from","length","join","className","css","map","review","dateTime","author_details","content","created_at","id","url","avatar_path","username","reviewImage","includes","defaultReviewAuthorImage","rel","target","href","src","alt","width","moment","format","useState","setReviews","movieId","useParams","useEffect","getMovieReviewsData","getMovieReviews","response","console","error","message","BASE_URL","API_KEY","getTrendingMovies","axios","data","Error","searchMovies","query","getMovieDetails","getMovieCredits","cast","results"],"sourceRoot":""}