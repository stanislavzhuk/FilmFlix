{"version":3,"file":"static/js/373.64e0f7f8.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/ReviewsItem/ReviewsItem.module.css?9eab","components/ReviewsItem/ReviewsItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/themoviedb-api.js","services/utils.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"ReviewsItem_reviewsList__YW6yF\",\"reviewsItem\":\"ReviewsItem_reviewsItem__FbWDV\",\"reviewsContLink\":\"ReviewsItem_reviewsContLink__HhIUs\",\"reviewsName\":\"ReviewsItem_reviewsName__u+zuh\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ReviewsItem.module.css';\nimport { formatAvatar, formatDateTime, ratingConvert } from 'services/utils';\n\nconst ReviewsItem = ({ reviews }) => {\n  return (\n    <ul className={css.reviewsList}>\n      {reviews.map(review => {\n        const { author_details, content, created_at, id, url } = review;\n        const { avatar_path, username, rating } = author_details;\n\n        return (\n          <li key={id} className={css.reviewsItem}>\n            <a className={css.reviewsContLink} rel=\"noopener noreferrer\" target=\"_blank\" href={url}>\n              <h4 className={css.reviewsName}>{username}</h4>\n              <p>{rating !== null && `Rating: ${ratingConvert(rating)}`}</p>\n              <img src={formatAvatar(avatar_path)} alt=\"Review Author\" width=\"100\" />\n              <p>{content}</p>\n              <p>Created: {formatDateTime(created_at)}</p>\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  );\n};\n\nReviewsItem.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author_details: PropTypes.shape({\n        avatar_path: PropTypes.string,\n        username: PropTypes.string,\n        rating: PropTypes.number,\n      }),\n      content: PropTypes.string,\n      created_at: PropTypes.string,\n      id: PropTypes.string,\n      url: PropTypes.string,\n    })\n  ),\n};\n\nexport default ReviewsItem;","// extracted by mini-css-extract-plugin\nexport default {\"reviewsContainer\":\"Reviews_reviewsContainer__bHfUv\",\"reviewsTitle\":\"Reviews_reviewsTitle__mxqAS\",\"reviewsAltText\":\"Reviews_reviewsAltText__pjX+6\"};","import ReviewsItem from 'components/ReviewsItem/ReviewsItem';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/themoviedb-api';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviewsData = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response);\n        // console.log(response);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getMovieReviewsData();\n  }, [movieId]);\n\n\n  return (\n    <div className={css.reviewsContainer}>\n      <h3 className={css.reviewsTitle}>Reviews</h3>\n      {reviews.length > 0 ? (\n        <ReviewsItem reviews={reviews} />\n      ) : (\n        <p className={css.reviewsAltText}>We don't have any reviews for this movie yet.</p>\n      )}\n    </div>\n  )};\n\nexport default Reviews;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab7c8e3be151e2a634eb03e6c55db2da';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport const searchMovies = async (query) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму.\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};","import moment from 'moment';\nimport defaultReviewAuthorImage from '../images/default_review_author.png'\nimport defaultPosterImage from '../images/default_poster.png'\n\nexport const ratingConvert = rating => Array.from({ length: rating }, () => '✯').join('');\n\nexport const formatDate = date => moment(date).format('DD MMM YYYY');\n\nexport const formatDateTime = dateTime => moment(dateTime).format('DD MMM YYYY HH:mm:ss');\n\nexport const formatAvatar = avatar => {\n  if (!avatar) return defaultReviewAuthorImage;\n  \n  const arr = Array.from(avatar);\n  arr.shift();\n  if (arr.length <= 31) return `https://image.tmdb.org/t/p/w500/${arr.join('')}`;\n\n  return arr.join('');\n};\n\nexport const ToStringConverter = obj => obj?.map(elem => elem.name).join(', ');\n\nexport const formatPoster = poster => poster? `https://image.tmdb.org/t/p/w500${poster}` : defaultPosterImage;\n"],"names":["reviews","className","css","map","review","author_details","content","created_at","id","url","avatar_path","username","rating","rel","target","href","ratingConvert","src","formatAvatar","alt","width","formatDateTime","useState","setReviews","movieId","useParams","useEffect","getMovieReviewsData","getMovieReviews","response","console","error","message","length","BASE_URL","API_KEY","getTrendingMovies","axios","data","Error","searchMovies","query","getMovieDetails","getMovieCredits","cast","results","Array","from","join","formatDate","date","moment","format","dateTime","avatar","defaultReviewAuthorImage","arr","shift","ToStringConverter","obj","elem","name","formatPoster","poster","defaultPosterImage"],"sourceRoot":""}