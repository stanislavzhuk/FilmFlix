{"version":3,"file":"static/js/957.a318529a.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/themoviedb-api.js"],"sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport defaultPosterImage from '../../images/default_poster.png';\n\nconst MovieCard = ({ info }) => {\n  const {\n    genres,\n    homepage,\n    original_title,\n    overview,\n    poster_path,\n    production_companies,\n    production_countries,\n    release_date,\n    tagline,\n    title,\n    vote_average,\n    vote_count\n  } = info;\n\n  const genresList = genres?.map(genre => genre.name).join(', ');\n\n  const productionCountriesList = production_countries?.map(countrie => countrie.name).join(', ');\n\n  const productionCompaniesList = production_companies?.map(\n    ({ id, logo_path, name }) =>\n      logo_path && (\n        <li key={id}>\n          {logo_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${logo_path}`}\n              alt={name}\n              style={{ maxHeight: 50, maxWidth: 200 }}\n            />\n          )}\n        </li>\n      )\n  );\n  // console.log(productionCompaniesList);\n\n  const formatDate = date => {\n    const formattedDate = moment(date).format('DD MMM YYYY');\n    return formattedDate;\n  };\n\n  const posterImage = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultPosterImage;\n\n  return (\n    <>\n      <div>\n        <a rel=\"noopener noreferrer\" target=\"_blank\" href={homepage}>\n          <img\n            src={posterImage}\n            alt={original_title}\n            loading=\"lazy\"\n            width=\"300\"\n            max-height='709'\n          />\n        </a>\n        <p>{productionCountriesList !== '' ? productionCountriesList : 'Country information not available'}</p>\n      </div>\n\n      <div>\n        <h2>\n          {title}\n          {release_date && <span> ({release_date.slice(0, 4)})</span>}\n        </h2>\n        <p>{tagline}</p>\n      </div>\n\n      <div>\n        <h4>Overview: </h4>\n        <p>{overview !== '' ? overview : 'Unfortunately, there is no detailed overview available for this movie.'}</p>\n      </div>\n\n      <div>\n        <h4>Genres: </h4>\n        <p>{genresList !== '' ? genresList : 'No genres provided'}</p>\n      </div>\n      \n      <div>\n        <h4>Statistics: </h4>\n        <ul>\n          <li>\n            Release Date:\n            <p>{formatDate(release_date)}</p>\n          </li>\n\n          <li>\n            User Score:\n            <p>{Math.round(vote_average * 10)}%&ensp;</p>\n          </li>\n\n          <li>\n            Votes:\n            <p>{vote_count !== '' ? vote_count : 'No votes yet'}</p>\n          </li>\n        </ul>\n      </div>\n\n      <div>\n        <h4>Production Companies:</h4>\n        {productionCompaniesList?.length > 0 && <div>{productionCompaniesList}</div>}\n      </div>\n\n      <div>\n        <h3>Additional Information</h3>\n        <ul>\n          <li>\n            <Link to='cast'>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to='reviews'>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default MovieCard;","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport MovieDescription from 'components/MovieCard/MovieCard';\nimport { getMovieDetails } from 'services/themoviedb-api';\nimport Loader from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const goBackLocationRef = useRef(location.state?.from ?? '/');\n  const [movieInfo, setMovieInfo] = useState({});\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieDetailsData = async () => {\n      try {\n        const response = await getMovieDetails(movieId);\n        setMovieInfo(response);\n        // console.log(response);\n      } catch (error) {\n        console.error(error.message);\n      }\n    };\n\n    getMovieDetailsData();\n  }, [movieId])\n\n  return (\n    <>\n      <article>\n        <Link to={goBackLocationRef.current}>Go back</Link>\n        <MovieDescription info={movieInfo} />\n      </article>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'ab7c8e3be151e2a634eb03e6c55db2da';\n\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// пошук фільму за ключовим словом на сторінці фільмів.\nexport const searchMovies = async (query) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит повної інформації про фільм для сторінки кінофільму.\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data.cast;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};\n\n// запит оглядів для сторінки кінофільму.\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n};"],"names":["date","info","genres","homepage","original_title","overview","poster_path","production_companies","production_countries","release_date","tagline","title","vote_average","vote_count","genresList","map","genre","name","join","productionCountriesList","countrie","productionCompaniesList","id","logo_path","src","alt","style","maxHeight","maxWidth","posterImage","defaultPosterImage","rel","target","href","loading","width","slice","moment","format","Math","round","length","to","location","useLocation","goBackLocationRef","useRef","state","from","useState","movieInfo","setMovieInfo","movieId","useParams","useEffect","getMovieDetailsData","getMovieDetails","response","console","error","message","current","Suspense","fallback","Loader","BASE_URL","API_KEY","getTrendingMovies","axios","data","Error","searchMovies","query","getMovieCredits","cast","getMovieReviews","results"],"sourceRoot":""}